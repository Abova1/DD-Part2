if (!blueContours.isEmpty()) {
            double largestArea = 0;
            Rect largestRectangle = null;

            for (MatOfPoint contour : blueContours) {
                Rect rectangle = Imgproc.boundingRect(contour);

                int width = rectangle.width;

                int height = rectangle.height;

                if (width > 55 && width < 160 && height > 55 && height < 160) {


                    roi = new Mat(blueMask, rectangle);

                    int bluePixels = Core.countNonZero(roi);

                    int totalPixels = width * height;

                    double bluePercentage = (double) bluePixels / totalPixels * 100.0;


                    int difference = Math.abs(width - height);


                    boolean square = difference < 28.5;
                    boolean tooMuch = bluePercentage > 63;


                    if (square && tooMuch) {
                        continue;
                    }

                    if (rectangle.area() > largestArea) {
                        largestArea = rectangle.area();
                        largestRectangle = rectangle;
                    }
                }
            }

            if (largestRectangle != null) {
                blueCenterX = largestRectangle.x + largestRectangle.width / 2;
                blueCenterY = largestRectangle.y + largestRectangle.height / 2;

                blueHeight = largestRectangle.height;
                blueWidth = largestRectangle.width;

                if(largestRectangle.height > largestRectangle.width){
                    blueOrientation = 0;
                    Imgproc.putText(
                            input,
                            "Blue: Vertical",
                            new Point(375, 25),
                            Imgproc.FONT_HERSHEY_DUPLEX,
                            0.85,
                            new Scalar(255, 255, 0))
                    ;
                }
                else if (largestRectangle.width > largestRectangle.height){
                    blueOrientation = 180;
                    Imgproc.putText(
                            input,
                            "Blue: horizontal",
                            new Point(375, 25),
                            Imgproc.FONT_HERSHEY_DUPLEX,
                            0.85,
                            new Scalar(255, 255, 0))
                    ;
                }


                Imgproc.rectangle(input, largestRectangle, new Scalar(100, 0, 255), 2);
                Imgproc.circle(input, new Point(blueCenterX, blueCenterY), 4, new Scalar(255, 0, 0), -1);



            }
        } else {
            blueCenterX = -1;
            blueCenterY = -1;
        }

        if(SS){
            String Path =  Environment.getExternalStorageDirectory().getPath() + System.currentTimeMillis() + ".png";

            Imgcodecs.imwrite(Path, input);

            ssInfo = "Blue height: " + blueHeight + " " + " | "
                    + "Blue Width: " + blueWidth + " " + " | "
                    + "Blue X: " + blueCenterX + " " + " | "
                    + "Blue Y: " + blueCenterY;


            SS = false;
        }

=======================================================================================================================================

//    public void detection(
//            Mat input,
//            String Color,
//            Mat Mask,
//            List<MatOfPoint> Contours,
//            int width, int height,
//            int CenterX, int CenterY,
//            int Orientation,
//            int labelX, int labelY) {
//
//        if (!Contours.isEmpty()) {
//            double largestArea = 0;
//            Rect largestRectangle = null;
//
//            for (MatOfPoint contour : Contours) {
//                Rect rectangle = Imgproc.boundingRect(contour);
//
//                width = rectangle.width;
//
//                height = rectangle.height;
//
//                if (width > 55 && width < 160 && height > 55 && height < 160) {
//
//                    roi = new Mat(Mask, rectangle);
//
//                    int Pixels = Core.countNonZero(roi);
//
//                    int totalPixels = width * height;
//
//                    double Percentage = (double) Pixels / totalPixels * 100.0;
//
//                    int difference = Math.abs(width - height);
//
//                    boolean square = difference < 28.5;
//
//                    boolean tooMuch = Percentage > 63;
//
//                    if (square && tooMuch) {
//                        continue;
//                    }
//
//                    if (rectangle.area() > largestArea) {
//                        largestArea = rectangle.area();
//                        largestRectangle = rectangle;
//                    }
//                }
//            }
//
//            if (largestRectangle != null) {
//                CenterX = largestRectangle.x + largestRectangle.width / 2;
//                CenterY = largestRectangle.y + largestRectangle.height / 2;
//
//                height = largestRectangle.height;
//                width = largestRectangle.width;
//
//                if(largestRectangle.height > largestRectangle.width){
//                    Orientation = 0;
//                    Imgproc.putText(
//                            input,
//                            Color + ": Vertical",
//                            new Point(labelX, labelY),
//                            Imgproc.FONT_HERSHEY_DUPLEX,
//                            0.85,
//                            new Scalar(255, 255, 0))
//                    ;
//                }
//                else if (largestRectangle.width > largestRectangle.height){
//                    Orientation = 180;
//                    Imgproc.putText(
//                            input,
//                            Color + ": Horizontal",
//                            new Point(labelX, labelY),
//                            Imgproc.FONT_HERSHEY_DUPLEX,
//                            0.85,
//                            new Scalar(255, 255, 0))
//                    ;
//                }
//
//
//                Imgproc.rectangle(input, largestRectangle, new Scalar(100, 0, 255), 2);
//                Imgproc.circle(input, new Point(CenterX, CenterY), 4, new Scalar(255, 0, 0), -1);
//            }
//        } else {
//            CenterX = -1;
//            CenterY = -1;
//        }
//
//        String ssInfo1 = Color + " height: " + height + " | "
//                + Color + " Width: " + width + " | "
//                + Color + " X: " + CenterX + " | "
//                + Color + " Y: " + CenterY + " | "
//                + Color + " Orientation: " + Orientation;
//
//        if (Color.equals("Blue")) {
//            BlueStreamInfo = ssInfo1;
//        } else if (Color.equals("Yellow")) {
//            YellowStreamInfo = ssInfo1;
//        }
//    }